class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
    
    def get_data(self):
        return self.data
    
    def get_next(self):
        return self.next

class LinkedList:
    def __init__(self):
        self.head = None

    def add(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
        else:
            current = self.head
            while current.get_next() is not None:
                current = current.get_next()
            current.next = new_node

    def display(self):
        """
        Displays all elements in the linked list with their data and links.

        Returns:
            str: A string representation of the linked list.
        """
        if self.head is None:
            return "Empty list"

        current = self.head
        result = ""

        while current is not None:
            result += f"[{current.get_data()}] -> "
            current = current.get_next()

        return result.rstrip(" -> ") + " -> None"
linked_list = LinkedList()
linked_list.add(1)
linked_list.add(2)
linked_list.add(3)

print(linked_list.display())
